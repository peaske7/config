# ----------------------------
# functions
# ----------------------------
function kp() {
	port_to_kill="$@"
	echo $port_to_kill
	kill -9 $(lsof -ti:"$port_to_kill")
	port_to_kill="" 
}

function mkd() {
	mkdir "$@" && z "$@"
}

function git_current_branch() {
	echo $(git rev-parse --abbrev-ref HEAD 2>/dev/null)
}

function git_set_default_branch() {
	git remote set-head origin -a
}

function git_default_branch() {
	echo $(git rev-parse --abbrev-ref origin/HEAD | cut -c8-)
}

function grename() {
	# try to rename branch locally
	if [[ -z "$1" && -z "$2" ]]; then
		echo "Usage: $0 old_branch new_branch"
		return 1
	elif [[ -z "$2" ]]; then
		echo "Renaming $(git_current_branch) to $1"
		git branch -m "$(git_current_branch)" "$1"
	else 
		echo "Renaming $1 to $2"
		git branch -m "$1" "$2"
	fi

	# check if branch in remote origin
	if git config --get branch.$(git_current_branch).remote; then
		# rename branch in origin remote
		if git push origin :"$1"; then
			git push --set-upstream origin "$2"
		fi
	fi
}

function gdnl() {
	git diff -- ":(exclude)**/package-lock.json" ":(exclude)**/pnpm-lock.yaml" ":(exclude)*.lock"
}

function gddnl() {
	git diff "$(git_default_branch)" "$@" -- ":(exclude)package-lock.json" ":(exclude)pnpm-lock.yaml" ":(exclude)*.lock"
}

# rembg
# https://github.com/danielgatis/rembg?tab=readme-ov-file
function rembga() {
  for file in "$@"; do
    ft=$(file --mime-type -b "$file")
    if [[ "$ft" == "image/jpeg" || "$ft" == "image/jpg" || "$ft" == "image/png" ]]; then
      rembg -i "$file" -o "${file%.${ft}}-bgremoved.${ft}"
    else
      echo "Skipping $file, filetype $ft is not supported."
    fi
  done
}

# ----------------------------
# aliases
# ----------------------------
alias c=clear
alias e="${EDITOR} ." # [E]dit

# chezmoi
alias ch="chezmoi"
alias che="chezmoi edit"
alias cha="chezmoi apply -v"
alias chu="chezmoi update -v"
alias chc="chezmoi cd"
alias chez="che ~/.zshrc" # [CH]ezmoi [E]dit [Z]shrc
alias chen="che ~/.config/nvim" # [CH]ezmoi [E]dit [N]vim
alias cheh="che ~/.config/helix" # [CH]ezmoi [E]dit [H]elix
alias chep="che ~/.config/nixpkgs" # [CH]ezmoi [E]dit [P]kgs

# docker
alias dcu='docker compose up' # [D]ocker [C]ompose [U]p
alias dcd='docker compose down' # [D]ocker [C]ompose [D]own
alias dcbu='docker compose build && dcu' # [D]ocker [C]ompose [B]uild and [U]p
alias dsa='docker stop $(docker ps -aq)' # [D]ocker [S]top [A]ll
alias dra='docker rm $(docker ps -aq)' # [D]ocker [R]emove [A]ll
alias dca='dsa && dra' # [D]ocker [C]lean [A]ll
alias dvp='docker volume prune' # [D]ocker [V]olume [P]rune
alias drs='dcd && dvp && dcbu' # [D]ocker [R]e[S]tart

# git
# [G]it [F]zf [C]heck [O]ut
alias gfco="git branch --list | cut -c 3- | fzf --preview \"git log --pretty=format:'%h %cd %s' --date=format:'%Y-%m-%d %H:%M' {}\" | xargs git checkout"

alias gm="git merge"
alias gss="git status --short"
alias gaa="git add --all"
alias gcam="git commit -a -m"
alias gbd="git branch -D"
alias gsd='"$(git_set_default_branch)"'

alias gco="git checkout"
alias gcb="git checkout -b" # creates branch
alias gci='git checkout "$(git branch -a | fzf | xargs)"' # [G]it [C]heckoout [I]nteractive
alias gcd='git checkout "$(git_default_branch)"' # [G]it [C]heckout [D]efault

alias gfp='git fetch --prune' # [G]it [F]etch [P]rune

alias gd="git diff"
alias gdd='gd "$(git_default_branch)"' # [G]it [D]iff [D]efault
alias gdds='gd "$(git_default_branch)" --stat' # [G]it [D]iff [D]efault [S]tats
alias gdi='gd "$(git branch -a | fzf | xargs)"' # [G]it [D]iff [I]nteractive

alias gl="git pull"
alias gp="git push"
alias gpsup='git push -u origin "$(git_current_branch)"'
alias glg='git log'
alias glgg="git log --graph --decorate --all"
alias grbi="git rebase -i --autosquash"
alias grbc="git rebase --continue"
alias gafr="gaa && git commit --fixup HEAD && grbi HEAD~2" # [G]it [A]dd all [F]ixup [R]ebase
alias grh="git reset --hard" # [G]it [R]eset [H]ard
alias gsta="git stash push" # [G]it [STA]sh
alias gstc="git stash clear" # [G]it [ST]ash [C]lear
alias gstaa="git stash apply" # [G]it [STA]sh [A]pply
alias gf='git fetch --all'
alias gmtl='git mergetool --no-prompt --tool=nvimdiff2'

# tmux 
alias ta='tmux a' # [T]mux [A]ttach
alias tns='tmux new -s' # [T]mux [N]ew [S]ession
alias t%='tmux source-file ~/.tmux.conf'

# ssh
alias es='nvim ~/.ssh/config' # [E]dit [S]sh configs

alias timestamp='date +"%Y%m%d%H%M%S"' # [T]ime [S]tamp
